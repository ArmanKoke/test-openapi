// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// Bet implements bet operation.
	//
	// The debit method is called when the player makes a bet.
	//
	// POST /debit
	Bet(ctx context.Context, req OptBetRequest) (BetOK, error)
	// LaunchGame implements launchGame operation.
	//
	// Launch game on provider side.
	//
	// GET /launchGame
	LaunchGame(ctx context.Context, params LaunchGameParams) error
	// NewError creates *ErrorStatusCode from error returned by handler.
	//
	// Used for common default response.
	NewError(ctx context.Context, err error) *ErrorStatusCode
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h Handler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		baseServer: s,
	}, nil
}
