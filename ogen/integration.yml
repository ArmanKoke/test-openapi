openapi: 3.0.2
servers:
  - url: /api
info:
  version: 1.0.0
  title: spinoro-integration
tags:
  - name: spinoro-integration
    description: spinoro integration with grapes service
paths:
  /launchGame:
    get:
      summary: Launch game on provider side
      description: |
        Launch game on provider side.
      operationId: launchGame
      tags:
        - server
      parameters:
        - name: customerId
          in: query
          style: form
          
          description: |
            The customer ID.
            Will be provided to you by your account manager.
          schema:
            type: string
        - name: brandId
          in: query
          
          description: |
            The ID of the customer’s brand.
            Will be provided to you by your account manager.
          schema:
            type: string
        - name: playMode
          in: query
          
          description: |
            The play mode which can be one of:
            1 – real money
            3 – anonymous
          schema:
            $ref: '#/components/schemas/PlayMode'
        - name: securityToken
          in: query
          
          description: |
            A token which will later be sent by the game server to
            the game provider’s system to uniquely identify the
            player’s session.
            Mandatory parameter except for anonymous play mode.
          schema:
            type: string
        - name: playerId
          in: query
          
          description: |
            The unique ID of the player’s account in the game
            provider’s system.
            Mandatory parameter except for anonymous play mode.
          schema:
            type: string
        - name: nickname
          in: query
          
          description: |
            The player’s nickname.
            Mandatory parameter except for anonymous play mode
          schema:
            type: string
        - name: balance
          in: query
          
          description: |
            The current player’s balance in cents.
            In anonymous play mode the balance parameter will set
            the initial balance, and when the player tries to make a
            wager greater than his/her available balance, his/her
            balance will be reloaded automatically to the initial
            balance.
          schema:
            type: integer
            format: int64
        - name: currency
          in: query
          
          description: |
            ISO 4217 currency code.
            For example: “EUR”, “GBP”.
          schema:
            type: string
        - name: language
          in: query
          
          description: |
            ISO 639-1 language code.
            For example: “en”, “nl”.
          schema:
            type: string
        - name: country
          in: query
          
          description: |
            ISO 3166 country code.
            For example: “GB”, “DE”.
          schema:
            type: string
        - name: providerGameId
          in: query
          
          description: The unique game ID.
          schema:
            type: string
        - name: lobbyURL
          in: query
          
          description: URL to the game aggregator’s lobby.
          schema:
            type: string
        - name: jurisdiction
          in: query
          
          description: |
            ISO 3166 country code.
            Specifies the jurisdiction under which this game is
            being played. The game will enforce specific
            jurisdiction requirements based on this parameter.
            For example: use “GB” to conform with UKGC
            requirements.
            If not provided, no specific jurisdiction requirements are
            applied.
          schema:
            type: string
        - name: realityCheckInterval
          in: query
          
          description: |
            Specifies the time interval in seconds at which the
            reality check will appear on the screen. A zero value
            indicates no time interval which means that the reality
            check will never be presented (or presented just once if
            realityCheckStartTime is provided).
            Mandatory in case jurisdiction parameters are set to one
            which requires reality checks.
            If the specified jurisdiction does not require reality
            checks, or is not provided, but this parameter is
            provided, an error will be returned.
          schema:
            type: integer
            format: int32
        - name: realityCheckStartTime
          in: query
          
          description: |
            Indicates the seconds to wait until the 1st reality check
            should be presented. A zero value means that the reality
            check should be presented immediately w/o delay.
            If you don’t want to present a reality check at all, just
            set realityCheckInterval to zero, and don’t set
            realityCheckStartTime at all.
            This parameter provides a way to seamlessly continue
            previous reality checks presented during the player’s
            game session.
            If not provided, realityCheckInterval is used instead.
          schema:
            type: integer
            format: int32
        - name: audio
          in: query
          
          description: |
            The game audio mode which can be one of:
            1 – on (default on PC)
            2 – off
            3 – ask player
            Audio mode 3 is only relevant for Mobile. On PC only
            modes 1 and 2 are valid.
            Player preferences made during the session will
            override this.
          schema:
            $ref: '#/components/schemas/AudioMode'
        - name: originUrl
          in: query
          
          description: The origin url of the lobby opening the game
          schema:
            type: string
        - name: minBet
          in: query
          
          description: The minimum bet allowed (for supported games only)
          schema:
            type: integer
            format: int64
        - name: maxTotalBet
          in: query
          
          description: The max total bet allowed (for supported games only)
          schema:
            type: integer
            format: int64
        - name: defaultBet
          in: query
          
          description: The default bet (for supported games only)
          schema:
            type: integer
            format: int64
      responses:
        '301':
          description: |
            To launch a game, Game Aggregator sends a launchGame request with parameters to the game
            provider’s endpoint. The call will be redirected to the required game and the game will be launched
            by the game provider in an iframe.
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /debit:
    post:
      summary: The debit method is called when the player makes a bet
      description: |
        The debit method is called when the player makes a bet.
      operationId: bet
      tags:
        - client
        - bet
      requestBody:
        description: Bet to be processed
        
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BetRequest'
      responses:
        '200':
          description: |
            To
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/BetResponse'
                  - $ref: '#/components/schemas/IntegrationError'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: Error code
        message:
          type: string
          description: Error message
    IntegrationError:
      type: object
      properties:
        success:
          type: boolean
          description: Will be set to false in case of failure
        errorCode:
          $ref: '#/components/schemas/IntegrationErrorCode'
        balance:
          type: integer
          format: int64
        cashBalance:
          type: integer
          format: int64
          description: |
            The player’s account
            cash balance in cents
            
            Used in regulated markets
        bonusBalance:
          type: integer
          format: int64
          description: |
            The player’s account
            bonus balance in
            cents
            
            Used in regulated markets
    IntegrationErrorCode:
      type: string
      description: |
        An error code
        describing the reason
        for the failure

        See the table of possible
        error codes below.
    PlayMode:
      description: |
        The play mode which can be one of:
        1 – real money
        3 – anonymous
      type: integer
      format: int8
      enum: [ 1, 3 ]
      x-enum-varnames:
        - real money
        - anonymous
    AudioMode:
      description: |
        The game audio mode which can be one of:
        1 – on (default on PC)
        2 – off
        3 – ask player
        Audio mode 3 is only relevant for Mobile. On PC only
        modes 1 and 2 are valid.
        Player preferences made during the session will
        override this.
      type: integer
      format: int8
      enum: [ 1, 2, 3 ]
      x-enum-varnames:
        - on (default on PC)
        - off
        - ask player
    BetRequest:
      type: object
      properties:
        secret:
          type: string
          description: |
            This is the shared
            secret between the
            game aggregator and
            the game provider
            
            The secret is configured by
            the Game aggregator admin
            for each game provider
            separately. See Security
            section above.
        sessionId:
          type: string
          description: |
            The unique session id
            for the new session.
            
            Each game launching will
            create a new session.
        securityToken:
          type: string
          description: |
            The security token is
            provided so that the
            wallet platform can
            uniquely identify the
            player’s session
            
            The security token was
            previously provided to the
            Game aggregator upon
            launching the game or
            replaced with serverToken
            on initGame call.
        playerId:
          type: string
          description: |
            The ID of the player’s
            account in the game
            provider’s system
            
            Uniquely identifies a player
            account per brand.
        playMode:
          $ref: '#/components/schemas/PlayMode'
        providerGameId:
          type: string
          description: |
            The game ID
            
            Each game has a unique ID.
        roundId:
          type: string
          description: The unique round ID
        secondaryRoundId:
          type: string
          description: |
            The secondary round
            identifier which was
            provided for the
            original round (used
            for games free round /
            bonus round feature \
            multiple credit\debit)
        transactionId:
          type: string
          
          description: The unique transaction ID of the debit
        currency:
          type: string
          
          description: The ISO 4217 code e.g. EUR
        amount:
          type: integer
          format: int64
          
          description: The bet amount made in cents
        closeRound:
          type: boolean
          
          description: |
            closeRound = true means
            no further request for the
            given roundId should be
            handled.
    BetResponse:
      type: object
      properties:
        success:
          type: boolean
          description: true in case the request succeeded, false otherwise
        referenceId:
          type: string
          description: Unique ID of the record in the game provider’s system.
        currency:
          type: string
          description: The ISO 4217 code
        balance:
          type: integer
          format: int64
        cashBalance:
          type: integer
          format: int64
          description: |
            The player’s account
            cash balance in cents
            
            Used in regulated markets
        bonusBalance:
          type: integer
          format: int64
          description: |
            The player’s account
            bonus balance in
            cents
            
            Used in regulated markets
